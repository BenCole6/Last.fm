source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(last_fm_plays)
View(last_fm_plays)
library(tidyverse)
library(ggplot2)
class(last_fm_plays$Date)
library(lubridate)
as_date(last_fm_plays$Date)
last_fm_plays$Date <- as_date(last_fm_plays$Date)
last_fm_plays$Date <- as_datetime(last_fm_plays$Date)
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- as_datetime(last_fm_plays$Date)
class(last_fm_plays$Date)
sapply(last_fm_plays, is.na)
sapply(last_fm_plays, is.na) %>% sum()
check_health <- function(data) {
unique_tracks <- unique(select(data, -date))
print(sum(is.na(unique_tracks$Album)))
print(sum(is.na(unique_tracks$Artist)))
print(sum(is.na(unique_tracks$Song)))
}
check_health(last_fm_plays)
unique_tracks <- unique(select(data, -Date))
check_health <- function(data) {
unique_tracks <- unique(select(data, -Date))
print(sum(is.na(unique_tracks$Album)))
print(sum(is.na(unique_tracks$Artist)))
print(sum(is.na(unique_tracks$Song)))
}
check_health(last_fm_plays)
sum(is.na(last_fm_plays$Artist))
sum(is.na(last_fm_plays$Artist))
sum(is.na(last_fm_plays$Album))
sum(is.na(last_fm_plays$Song))
sum(is.na(last_fm_plays$Date))
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- as_datetime(last_fm_plays$Date, origin="01011900")
last_fm_plays$Date <- as_datetime(last_fm_plays$Date, origin="19000101")
last_fm_plays$Date <- as_datetime(last_fm_plays$Date, origin="1900.01.01")
last_fm_plays$Date <- as_datetime(last_fm_plays$Date, origin="1900/01/01")
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- as_datetime(last_fm_plays$Date, origin="1900-01-01")
OlsonNames()
last_fm_plays$Date <- as_datetime(last_fm_plays$Date, origin="1900-01-01", tz="Australia/Melbourne")
olson_time_zones()
last_fm_plays$Date <- as_datetime(last_fm_plays$Date, origin=ymd("1900-01-01"), tz="Australia/Melbourne")
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- as_date(last_fm_plays$Date, origin="1900-01-01")
library(lubridate)
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- as_date(last_fm_plays$Date, origin="1900-01-01")
last_fm_plays$Date <- as.Ddate(last_fm_plays$Date, origin="1900-01-01")
last_fm_plays$Date <- as.Date(last_fm_plays$Date, origin="1900-01-01")
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- as.Date(last_fm_plays$Date, origin="1900-01-01")
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- as_datetime(last_fm_plays$Date, origin=ymd("1900-01-01"), tz="Australia/Melbourne")
as_datetime(last_fm_plays$Date, origin=ymd("1900-01-01"), tz="Australia/Melbourne")
last_fm_plays$Date <- as.POSIXct(last_fm_plays$Date, origin=ymd("1900-01-01"), tz="Australia/Melbourne")
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- as.POSIXct(last_fm_plays$Date, origin="1900-01-01", tz="Australia/Melbourne")
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- as_datetime(last_fm_plays$Date, tz="Australia/Melbourne")
library(readxl)
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
dmy_hm(last_fm_plays$Date)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date)
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Melbourne")
sum(is.na(last_fm_plays$Artist))
sum(is.na(last_fm_plays$Album))
sum(is.na(last_fm_plays$Song))
sum(is.na(last_fm_plays$Date))
filter(last_fm_plays, Date==is.na)
last_fm_plays %>% filter(Date==is.na())
last_fm_plays %>% filter(is.na(Date))
filterna <- last_fm_plays %>% filter(is.na(Date))
View(filterna)
library(urltools)
install.packages("urltools",dep=T)
library(urltools)
trackinfo <- function(artist, track, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "track.getInfo")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "track", URLencode(track))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
trackinfo(last_fm_plays)
library(jsonlite)
library(memoise)
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Melbourne")
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
fetch_artist_toptags(last_fm_plays$Artist)
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
api_key <- "830805a8e0742f12bb22d23eb53ddd0d"
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
api_key <- 830805a8e0742f12bb22d23eb53ddd0d
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
build_artist_toptags_query(last_fm_plays$Artist, api_key=api_key)
build_artist_toptags_query(last_fm_plays$Artist)
last_fm_plays$Tags <- build_artist_toptags_query(last_fm_plays$Artist, api_key=api_key)
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
last_fm_plays$toptags <- build_artist_toptags_query(last_fm_plays$Artist, api_key=api_key)
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist, api_key=api_key)
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
last_fm_plays$Tags <- NULL
last_fm_plays$toptags <- NULL
base <- param_set(base, "method", "artist.gettoptags")
api_key <- 830805a8e0742f12bb22d23eb53ddd0d
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
library(jsonlite)
library(memoise)
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Melbourne")
api_key <- 830805a8e0742f12bb22d23eb53ddd0d
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
source('~/Work/Last.fm Scrobbles/last.fm_script.R', echo=TRUE)
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
library(readr)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(readxl)
library(urltools)
library(jsonlite)
library(memoise)
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Melbourne")
api_key <- 830805a8e0742f12bb22d23eb53ddd0d
api_key <- "830805a8e0742f12bb22d23eb53ddd0d"
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
api_key
api_key <- 830805a8e0742f12bb22d23eb53ddd0d
api_key
source('~/Work/Last.fm Scrobbles/last.fm_script.R', echo=TRUE)
build_artist_toptags_query <- function(artist, api_key=api_key,
base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
source('~/Work/Last.fm Scrobbles/last.fm_script.R', echo=TRUE)
getwd()
source('~/Work/Last.fm Scrobbles/last.fm_script.R', echo=TRUE)
fetch_track_album <- function(artist, track) {
print(paste0("Fetching ", artist, " song: ", track))
json <- fromJSON(build_track_info_query(artist, track))
if (is.null(json$track$album)) return(NA)
return(json$track$album$title)
}
source('~/Work/Last.fm Scrobbles/last.fm_script.R', echo=TRUE)
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
source('~/Work/Last.fm Scrobbles/last.fm_script.R', echo=TRUE)
last_fm_plays$ArtTopTags <- fetch_artist_toptags()
last_fm_plays$ArtTopTags <- fetch_artist_toptags(Artist)
last_fm_plays$ArtTopTags <- fetch_artist_toptags(artist=Artist)
last_fm_plays$ArtTopTags <- fetch_artist_toptags(last_fm_plays$Artist)
last_fm_plays$ArtTopTags <- fetch_artist_toptags(artist=last_fm_plays$Artist)
last_fm_plays$ArtTopTags <- fetch_artist_toptags(last_fm_plays$Artist,
api_key=api_key)
last_fm_plays$ArtTopTags <- fetch_artist_toptags(last_fm_plays$Artist,
api_key)
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
last_fm_plays$ArtTopTags <- fetch_artist_toptags(last_fm_plays$Artist)
fetch_tracks_albums <- function(artists, tracks) {
if (length(artists) != length(tracks)) {
stop("Cannot fetch genres for songs because inputs are bad")
}
mapply(memfetch_track_album, artist = artists, track = tracks)
}
last_fm_plays$ArtTopTags <- fetch_artist_toptags(last_fm_plays$Artist,
last_fm_plays$Song)
last_fm_plays$ArtTopTags <- fetch_tracks_albums(last_fm_plays$Artist,
last_fm_plays$Song)
api_key
Sys.getlocale()
Sys.getlocale("LC_TIME")
Sys.timezone()
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz=Sys.timezone())
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz=Sys.timezone(location=T))
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz=Sys.timezone(location=T))
OlsonNames()
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Melbourne")
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Sydney")
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Sydney")
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
class(last_fm_plays$Date)
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Melbourne",
locale=Sys.getlocale("LC_TIME"))
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Melbourne",
locale=Sys.getlocale("LC_TIME"))
last_fm_plays <- select(last_fm_plays, date, song, artist, album)
last_fm_plays <- mutate(last_fm_plays, date = as.POSIXct(date, origin = "1970-01-01"))
last_fm_plays <- arrange(last_fm_plays, date)
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Melbourne",
locale=Sys.getlocale("LC_TIME"))
last_fm_plays <- select(last_fm_plays, date, song, artist, album)
last_fm_plays <- select(last_fm_plays, Date, Song, Artist, Album)
last_fm_plays <- select(last_fm_plays, Date, Song, Artist, Album)
last_fm_plays <- mutate(last_fm_plays, Date = as.POSIXct(date, origin = "1970-01-01"))
last_fm_plays <- read_csv("~/Work/Last.fm Scrobbles/last.fm plays.csv",
col_names = c("Artist", "Album", "Song", "Date"), skip = 1)
last_fm_plays$Date <- dmy_hm(last_fm_plays$Date, tz="Australia/Melbourne",
locale=Sys.getlocale("LC_TIME"))
last_fm_plays <- select(last_fm_plays, Date, Song, Artist, Album)
last_fm_plays <- mutate(last_fm_plays, Date = as.POSIXct(date, origin = "1970-01-01"))
return(base)
build_track_info_query <- function(artist, track, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "track.getInfo")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "track", URLencode(track))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
build_track_info_query(last_fm_plays$Artist,
last_fm_plays$Song,
api_key)
fetch_track_album <- function(artist, track) {
print(paste0("Fetching ", artist, " song: ", track))
json <- fromJSON(build_track_info_query(artist, track))
if (is.null(json$track$album)) return(NA)
return(json$track$album$title)
}
memfetch_track_album <- memoise(fetch_track_album)
memfetch_track_album
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
build_artist_toptags_query(last_fm_plays$Artist, api_key)
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
fetch_artist_toptags(last_fm_plays$Artist)
build_artist_toptags_query(last_fm_plays$Artist, api_key)
build_artist_toptags_query <- function(artist, api_key=api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api_key)
base <- param_set(base, "format", "json")
return(base)
}
build_artist_toptags_query(last_fm_plays$Artist)
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
fetch_artist_toptags(last_fm_plays$Artist)
rm(api_key)
api <- "19fcc9dfc1aaeba4688dbce850ab5113"
base <- param_set(base, "api_key", api)
build_artist_toptags_query <- function(artist, api_key, base = "http://ws.audioscrobbler.com/2.0/") {
base <- param_set(base, "method", "artist.gettoptags")
base <- param_set(base, "artist", URLencode(artist))
base <- param_set(base, "api_key", api)
base <- param_set(base, "format", "json")
return(base)
}
build_artist_toptags_query(last_fm_plays$Artist)
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
fetch_artist_toptags(last_fm_plays$Artist)
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays)
fetch_artist_toptags(last_fm_plays)
fetch_artist_toptags(last_fm_plays$Artist)
json <- fromJSON(build_artist_toptags_query(artist))
fetch_artist_toptags <- function(artist) {
# print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(as.vector(json$toptags$tag[,"name"]))
}
fetch_artist_toptags(last_fm_plays$Artist)
View(fetch_artist_toptags(last_fm_plays))
fetch_artist_toptags(last_fm_plays)
last_fm_plays$Tags <- fetch_artist_toptags(last_fm_plays$Artist)
fetch_artist_toptags(last_fm_plays$Artist)
fetch_artist_toptags(last_fm_plays$Artist[500])
last_fm_plays$Artist[500]
fetch_artist_toptags(last_fm_plays$Artist[1500])
last_fm_plays$Artist[1500]
fetch_artist_toptags(last_fm_plays$Artist)[1]
last_fm_plays$Tag1 <- fetch_artist_toptags(last_fm_plays$Artist)[1]
last_fm_plays$Artist
fetch_artist_toptags(last_fm_plays$Artist)
fetch_artist_toptags(last_fm_plays$Artist)
print(paste0("Fetching ", artist))
fetch_artist_toptags <- function(artist) {
print(paste0("Fetching ", artist))
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(c(as.vector(json$toptags$tag[,"name"])))
}
fetch_artist_toptags(last_fm_plays$Artist)
last_fm_plays$Tag <- fetch_artist_toptags(last_fm_plays$Artist)
length(last_fm_plays$Artist)
fetch_artist_toptags(data$Artist)[1]
Tags <- function(data, artist){
for (i in 1:length(data$Artist))
fetch_artist_toptags(data$Artist)[1]
}
Tags(last_fm_plays, Artist)
fetch_artist_toptags <- function(artist) {
json <- fromJSON(build_artist_toptags_query(artist))
if (length(json$toptags$tag) == 0) return(NA)
return(c(as.vector(json$toptags$tag[,"name"])))
}
last_fm_plays$Tag1 <- Tags(last_fm_plays, Artist)
rm(Tags)
source('~/Work/Last.fm Scrobbles/last.fm_script.R', echo=TRUE)
